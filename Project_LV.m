%% point 2.1
clc
clear all

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% MARKET DATA
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%Spot price
S_0=3583.67;

%Market expires
T=[ 0.090 	 0.247 	 0.496 	 0.764 	 1.014 	 1.510 	 2.008 	 2.507];

% forwards at market expiries
Fwd = [3581.24	3573.30	3490.39	3480.82	3463.77	3369.32	3346.41	3255.06];

% discount factor at market expiry
DF = [ 1.0003610 	 1.0008430 	 1.0013930 	 1.0021070 	 1.0028740 	 1.0041040 	 1.0046760 	 1.0039930];

% market strikes
K = [
    3300	3000	2600	2350	2200	1900	1750	1550;
    3500	3400	3200	3100	3050	2850	2750	2600;
    3550	3500	3400	3350	3300	3200	3150	3000;
    3600	3550	3500	3500	3450	3350	3350	3250;
    3650	3650	3550	3600	3600	3550	3550	3500;
    3700	3700	3700	3750	3800	3800	3850	3850;
    3750	3900	3950	4100	4200	4400	4600	4800];

% market volatilities
MktVol = [0.1652	0.2181	0.2549	0.2744	0.2749	0.2839	0.2814	0.288;
          0.1074	0.1509	0.177	0.1889	0.1924	0.2028	0.2043	0.2073;
          0.0935	0.1351	0.1529	0.1634	0.1716	0.1788	0.1822	0.1877;
          0.0832	0.1274	0.1412	0.1488	0.1597	0.1691	0.1723	0.1773;
          0.0777	0.1137	0.1357	0.1401	0.1486	0.1573	0.1634	0.1682;
          0.0768	0.1078	0.1223	0.1295	0.1364	0.1458	0.1527	0.1587;
          0.0793	0.0984	0.1085	0.1144	0.1199	0.1309	0.1375	0.1475];
      
      
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% CALIBRATION
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% normalized market strikes
[rows, cols] = size(K);
K_norm = K ./ repmat(Fwd, rows, 1);

% Dupire solver settings
Lt = 10;
Lh = 500;
K_min = 0.1;
K_max = 3;
Scheme = 'cn';

% calibration settings
Threshold = 0.0010;
MaxIter = 200;

[V, ModelVol, MaxErr] = calibrator(T,K_norm,MktVol,Threshold,MaxIter,Lt,Lh,K_min,K_max,Scheme);

% plot local volatility function vs market implied volatility
figure;
plot(K(:,1),MktVol(:,1),'o',K(:,1),ModelVol(:,1),':.',K(:,1),V(:,1),':.b','linewidth',1.5);
xline(S_0,'-',{'Spot price'});
title('Calibrated model and local volatility for asset E CORP');
legend('MktVol','ModelVol','LocalVol')

figure;
plot(MaxErr,'.','MarkerSize',15);
title('calibration error at each iteration of the fixed-point calibration');

%% point 2.2

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% PRICING THROUGH MC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

S_0=3583.67;
k=[0.9 1.1];

lv_price=[];
lv_impl_vol=[];
price_black=[];
black_impl_vol=[];

for i=1:length(k)
    
expiry=0.5;
strike=k(i)*S_0;

N = 1000000; %MC simulations (probably to change)
M = 50; %timesteps

% MC simulation (Local Vol)
S = lv_simulation_log(T,Fwd,V,K,N,M,expiry);

% LV price of a call option
discount_factor = interp1(T,DF,expiry);
lv_price = [lv_price,discount_factor*mean(max(S(1,:) - strike,0))];

% LV implied volatility
fwd = interp1(T,Fwd,expiry);
lv_impl_vol = [lv_impl_vol, blsimpv(fwd,strike,0,expiry,lv_price/discount_factor)];


% MC simulation (Black)
time_idx = find(T>=expiry,1);
sigma = interp1(K(:,time_idx),MktVol(:,time_idx),strike); % model parameter
N_B = 1000000; %MC simulations
S_B = black_simulation_log(T,Fwd,sigma,N_B,expiry); 

% Black price of a call option
price_black = [price_black,discount_factor*mean(max(S_B(1,:) - strike,0))];
black_impl_vol = [black_impl_vol, blsimpv(fwd,strike,0,expiry,price_black/discount_factor)];

%{
% Probability densities generated by Monte Carlo simulation for LV and
% Black model
figure;
hist(S_B(1,:),100);
title('Probability density generated by Black model');

figure;
hist(S(1,:),100);
title('Probability density generated by LV model') 
%}
end
%% point 2.3

for i=1:length(k)
% option data
expiry = [2 2.5];
q=zeros(1,length(T));

% MC settings
N = 1000000; %MC simulations
M = 100; %timesteps

% MC simulation (LV)
S = lv_simulation_log(T,Fwd,ModelVol,K,N,M,expiry);

% option price
discount_factor = discount(T,DF,expiry(2));

fprintf('Price of the fc with perc_strike equal to %.2f\n', k(i));
P = discount_factor*mean(max(S(2,:) - k(i)*S(1,:),0))

fwd(1) = forward(S_0,T,DF,q,expiry(1));
fwd(2) = forward(S_0,T,DF,q,expiry(1));
model_impl_vol = blsimpv(fwd(2),k(i)*fwd(1),0,expiry(2)-expiry(1),P/discount_factor)
end